{"id":"CEqe","dependencies":[{"name":"/Users/spittela/code/giphlify/package.json","includedInParent":true,"mtime":1599671784193},{"name":"/Users/spittela/code/giphlify/.babelrc","includedInParent":true,"mtime":1599669969128},{"name":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/smithy-client/package.json","includedInParent":true,"mtime":1599668814074}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.getArrayIfSingleItem=void 0,exports.getArrayIfSingleItem=function(e){return Array.isArray(e)?e:[e]};"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/get-array-if-single-item.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":1,"column":104}},{"source":"../../src/get-array-if-single-item.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":1,"column":112}},{"source":"../../src/get-array-if-single-item.ts","name":null,"original":{"line":5,"column":36},"generated":{"line":1,"column":133}},{"source":"../../src/get-array-if-single-item.ts","name":null,"original":{"line":5,"column":40},"generated":{"line":1,"column":142}},{"source":"../../src/get-array-if-single-item.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":1,"column":145}},{"source":"../../src/get-array-if-single-item.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":1,"column":152}},{"source":"../../src/get-array-if-single-item.ts","name":null,"original":{"line":6,"column":8},"generated":{"line":1,"column":158}},{"source":"../../src/get-array-if-single-item.ts","name":null,"original":{"line":6,"column":16},"generated":{"line":1,"column":166}},{"source":"../../src/get-array-if-single-item.ts","name":null,"original":{"line":6,"column":30},"generated":{"line":1,"column":169}},{"source":"../../src/get-array-if-single-item.ts","name":null,"original":{"line":6,"column":43},"generated":{"line":1,"column":171}},{"source":"../../src/get-array-if-single-item.ts","name":null,"original":{"line":6,"column":44},"generated":{"line":1,"column":172}}],"sources":{"../../src/get-array-if-single-item.ts":"/**\n * The XML parser will set one K:V for a member that could\n * return multiple entries but only has one.\n */\nexport const getArrayIfSingleItem = <T>(mayBeArray: T): T | T[] =>\n  Array.isArray(mayBeArray) ? mayBeArray : [mayBeArray];\n"},"lineCount":null}},"error":null,"hash":"7fd1847769b1293db6586d036bb78163","cacheData":{"env":{}}}