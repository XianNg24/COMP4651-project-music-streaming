{"id":"TZa0","dependencies":[{"name":"/Users/spittela/code/giphlify/package.json","includedInParent":true,"mtime":1599671784193},{"name":"/Users/spittela/code/giphlify/.babelrc","includedInParent":true,"mtime":1599669969128},{"name":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/property-provider/package.json","includedInParent":true,"mtime":1599668814077},{"name":"tslib","loc":{"line":4,"column":22},"parent":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/property-provider/dist/cjs/memoize.js","resolved":"/Users/spittela/code/giphlify/node_modules/tslib/tslib.es6.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.memoize=void 0;var e=require(\"tslib\");exports.memoize=function(r,t,i){if(void 0===t){var n=r();return function(){return n}}var o=r(),u=!1;return function(){return e.__awaiter(void 0,void 0,void 0,function(){var n;return e.__generator(this,function(e){switch(e.label){case 0:return u?[2,o]:[4,o];case 1:return n=e.sent(),i&&!i(n)?(u=!0,[2,n]):t(n)?[2,o=r()]:[2,n]}})})}};"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/memoize.ts","name":null,"original":{"line":41,"column":13},"generated":{"line":1,"column":114}},{"source":"../../src/memoize.ts","name":null,"original":{"line":41,"column":13},"generated":{"line":1,"column":122}},{"source":"../../src/memoize.ts","name":null,"original":{"line":41,"column":40},"generated":{"line":1,"column":130}},{"source":"../../src/memoize.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":1,"column":139}},{"source":"../../src/memoize.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":1,"column":141}},{"source":"../../src/memoize.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":143}},{"source":"../../src/memoize.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":1,"column":146}},{"source":"../../src/memoize.ts","name":null,"original":{"line":46,"column":20},"generated":{"line":1,"column":154}},{"source":"../../src/memoize.ts","name":null,"original":{"line":46,"column":6},"generated":{"line":1,"column":158}},{"source":"../../src/memoize.ts","name":null,"original":{"line":46,"column":31},"generated":{"line":1,"column":160}},{"source":"../../src/memoize.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":1,"column":161}},{"source":"../../src/memoize.ts","name":null,"original":{"line":48,"column":10},"generated":{"line":1,"column":165}},{"source":"../../src/memoize.ts","name":null,"original":{"line":48,"column":19},"generated":{"line":1,"column":167}},{"source":"../../src/memoize.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":1,"column":171}},{"source":"../../src/memoize.ts","name":null,"original":{"line":49,"column":11},"generated":{"line":1,"column":178}},{"source":"../../src/memoize.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":1,"column":189}},{"source":"../../src/memoize.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":1,"column":196}},{"source":"../../src/memoize.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":1,"column":199}},{"source":"../../src/memoize.ts","name":null,"original":{"line":52,"column":6},"generated":{"line":1,"column":203}},{"source":"../../src/memoize.ts","name":null,"original":{"line":52,"column":15},"generated":{"line":1,"column":205}},{"source":"../../src/memoize.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":1,"column":209}},{"source":"../../src/memoize.ts","name":null,"original":{"line":53,"column":19},"generated":{"line":1,"column":212}},{"source":"../../src/memoize.ts","name":null,"original":{"line":55,"column":2},"generated":{"line":1,"column":214}},{"source":"../../src/memoize.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":1,"column":221}},{"source":"../../src/memoize.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":1,"column":232}},{"source":"../../src/memoize.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":1,"column":239}},{"source":"../../src/memoize.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":1,"column":241}},{"source":"../../src/memoize.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":1,"column":256}},{"source":"../../src/memoize.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":1,"column":263}},{"source":"../../src/memoize.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":1,"column":270}},{"source":"../../src/memoize.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":1,"column":272}},{"source":"../../src/memoize.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":1,"column":350}},{"source":"../../src/memoize.ts","name":null,"original":{"line":56,"column":8},"generated":{"line":1,"column":357}},{"source":"../../src/memoize.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":1,"column":359}},{"source":"../../src/memoize.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":1,"column":360}},{"source":"../../src/memoize.ts","name":null,"original":{"line":57,"column":13},"generated":{"line":1,"column":362}},{"source":"../../src/memoize.ts","name":null,"original":{"line":60,"column":21},"generated":{"line":1,"column":365}},{"source":"../../src/memoize.ts","name":null,"original":{"line":60,"column":21},"generated":{"line":1,"column":366}},{"source":"../../src/memoize.ts","name":null,"original":{"line":60,"column":27},"generated":{"line":1,"column":368}},{"source":"../../src/memoize.ts","name":null,"original":{"line":61,"column":4},"generated":{"line":1,"column":378}},{"source":"../../src/memoize.ts","name":null,"original":{"line":60,"column":10},"generated":{"line":1,"column":385}},{"source":"../../src/memoize.ts","name":null,"original":{"line":60,"column":21},"generated":{"line":1,"column":387}},{"source":"../../src/memoize.ts","name":null,"original":{"line":60,"column":21},"generated":{"line":1,"column":389}},{"source":"../../src/memoize.ts","name":null,"original":{"line":61,"column":8},"generated":{"line":1,"column":396}},{"source":"../../src/memoize.ts","name":null,"original":{"line":61,"column":28},"generated":{"line":1,"column":400}},{"source":"../../src/memoize.ts","name":null,"original":{"line":61,"column":44},"generated":{"line":1,"column":402}},{"source":"../../src/memoize.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":1,"column":406}},{"source":"../../src/memoize.ts","name":null,"original":{"line":62,"column":19},"generated":{"line":1,"column":409}},{"source":"../../src/memoize.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":1,"column":411}},{"source":"../../src/memoize.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":1,"column":412}},{"source":"../../src/memoize.ts","name":null,"original":{"line":63,"column":13},"generated":{"line":1,"column":414}},{"source":"../../src/memoize.ts","name":null,"original":{"line":65,"column":8},"generated":{"line":1,"column":418}},{"source":"../../src/memoize.ts","name":null,"original":{"line":65,"column":18},"generated":{"line":1,"column":420}},{"source":"../../src/memoize.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":1,"column":423}},{"source":"../../src/memoize.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":1,"column":424}},{"source":"../../src/memoize.ts","name":null,"original":{"line":66,"column":14},"generated":{"line":1,"column":426}},{"source":"../../src/memoize.ts","name":null,"original":{"line":66,"column":23},"generated":{"line":1,"column":428}},{"source":"../../src/memoize.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":1,"column":433}},{"source":"../../src/memoize.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":1,"column":434}},{"source":"../../src/memoize.ts","name":null,"original":{"line":68,"column":11},"generated":{"line":1,"column":436}}],"sources":{"../../src/memoize.ts":"import { Provider } from \"@aws-sdk/types\";\n\ninterface MemoizeOverload {\n  /**\n   *\n   * Decorates a provider function with either static memoization.\n   *\n   * To create a statically memoized provider, supply a provider as the only\n   * argument to this function. The provider will be invoked once, and all\n   * invocations of the provider returned by `memoize` will return the same\n   * promise object.\n   *\n   * @param provider The provider whose result should be cached indefinitely.\n   */\n  <T>(provider: Provider<T>): Provider<T>;\n\n  /**\n   * Decorates a provider function with refreshing memoization.\n   *\n   * @param provider          The provider whose result should be cached.\n   * @param isExpired         A function that will evaluate the resolved value and\n   *                          determine if it is expired. For example, when\n   *                          memoizing AWS credential providers, this function\n   *                          should return `true` when the credential's\n   *                          expiration is in the past (or very near future) and\n   *                          `false` otherwise.\n   * @param requiresRefresh   A function that will evaluate the resolved value and\n   *                          determine if it represents static value or one that\n   *                          will eventually need to be refreshed. For example,\n   *                          AWS credentials that have no defined expiration will\n   *                          never need to be refreshed, so this function would\n   *                          return `true` if the credentials resolved by the\n   *                          underlying provider had an expiration and `false`\n   *                          otherwise.\n   */\n  <T>(provider: Provider<T>, isExpired: (resolved: T) => boolean, requiresRefresh?: (resolved: T) => boolean): Provider<\n    T\n  >;\n}\n\nexport const memoize: MemoizeOverload = <T>(\n  provider: Provider<T>,\n  isExpired?: (resolved: T) => boolean,\n  requiresRefresh?: (resolved: T) => boolean\n): Provider<T> => {\n  if (isExpired === undefined) {\n    // This is a static memoization; no need to incorporate refreshing\n    const result = provider();\n    return () => result;\n  }\n\n  let result = provider();\n  let isConstant = false;\n\n  return async () => {\n    if (isConstant) {\n      return result;\n    }\n\n    const resolved = await result;\n    if (requiresRefresh && !requiresRefresh(resolved)) {\n      isConstant = true;\n      return resolved;\n    }\n    if (isExpired(resolved)) {\n      return (result = provider());\n    }\n    return resolved;\n  };\n};\n"},"lineCount":null}},"error":null,"hash":"126d842fcd3bd2023096fa8f5156813d","cacheData":{"env":{}}}