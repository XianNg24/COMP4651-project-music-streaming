{"id":"mc4g","dependencies":[{"name":"/Users/spittela/code/giphlify/package.json","includedInParent":true,"mtime":1599683869183},{"name":"/Users/spittela/code/giphlify/.babelrc","includedInParent":true,"mtime":1599669969128},{"name":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/middleware-retry/package.json","includedInParent":true,"mtime":1599668814020},{"name":"tslib","loc":{"line":4,"column":22},"parent":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/middleware-retry/dist/cjs/configurations.js","resolved":"/Users/spittela/code/giphlify/node_modules/tslib/tslib.es6.js"},{"name":"./defaultStrategy","loc":{"line":5,"column":32},"parent":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/middleware-retry/dist/cjs/configurations.js","resolved":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/middleware-retry/dist/cjs/defaultStrategy.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.resolveRetryConfig=void 0;var e=require(\"tslib\"),t=require(\"./defaultStrategy\");exports.resolveRetryConfig=function(a){var i,n=null!==(i=r(a.maxAttempts))&&void 0!==i?i:a.maxAttemptsDefaultProvider(a);return e.__assign(e.__assign({},a),{maxAttempts:n,retryStrategy:a.retryStrategy||new t.StandardRetryStrategy(n)})};var r=function(e){if(e){var t=Promise.resolve(e.toString());return function(){return t}}};"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/configurations.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":125}},{"source":"../../src/configurations.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":127}},{"source":"../../src/configurations.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":135}},{"source":"../../src/configurations.ts","name":null,"original":{"line":24,"column":13},"generated":{"line":1,"column":156}},{"source":"../../src/configurations.ts","name":null,"original":{"line":24,"column":13},"generated":{"line":1,"column":164}},{"source":"../../src/configurations.ts","name":null,"original":{"line":24,"column":34},"generated":{"line":1,"column":183}},{"source":"../../src/configurations.ts","name":null,"original":{"line":24,"column":38},"generated":{"line":1,"column":192}},{"source":"../../src/configurations.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":1,"column":201}},{"source":"../../src/configurations.ts","name":null,"original":{"line":25,"column":61},"generated":{"line":1,"column":203}},{"source":"../../src/configurations.ts","name":null,"original":{"line":25,"column":19},"generated":{"line":1,"column":211}},{"source":"../../src/configurations.ts","name":null,"original":{"line":25,"column":22},"generated":{"line":1,"column":213}},{"source":"../../src/configurations.ts","name":null,"original":{"line":25,"column":43},"generated":{"line":1,"column":215}},{"source":"../../src/configurations.ts","name":null,"original":{"line":25,"column":49},"generated":{"line":1,"column":217}},{"source":"../../src/configurations.ts","name":null,"original":{"line":25,"column":61},"generated":{"line":1,"column":237}},{"source":"../../src/configurations.ts","name":null,"original":{"line":25,"column":61},"generated":{"line":1,"column":241}},{"source":"../../src/configurations.ts","name":null,"original":{"line":25,"column":61},"generated":{"line":1,"column":243}},{"source":"../../src/configurations.ts","name":null,"original":{"line":25,"column":65},"generated":{"line":1,"column":245}},{"source":"../../src/configurations.ts","name":null,"original":{"line":25,"column":71},"generated":{"line":1,"column":247}},{"source":"../../src/configurations.ts","name":null,"original":{"line":25,"column":98},"generated":{"line":1,"column":274}},{"source":"../../src/configurations.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":277}},{"source":"../../src/configurations.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":284}},{"source":"../../src/configurations.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":286}},{"source":"../../src/configurations.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":295}},{"source":"../../src/configurations.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":297}},{"source":"../../src/configurations.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":306}},{"source":"../../src/configurations.ts","name":null,"original":{"line":27,"column":7},"generated":{"line":1,"column":309}},{"source":"../../src/configurations.ts","name":null,"original":{"line":27,"column":12},"generated":{"line":1,"column":312}},{"source":"../../src/configurations.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":313}},{"source":"../../src/configurations.ts","name":null,"original":{"line":28,"column":15},"generated":{"line":1,"column":325}},{"source":"../../src/configurations.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":1,"column":327}},{"source":"../../src/configurations.ts","name":null,"original":{"line":29,"column":19},"generated":{"line":1,"column":341}},{"source":"../../src/configurations.ts","name":null,"original":{"line":29,"column":25},"generated":{"line":1,"column":343}},{"source":"../../src/configurations.ts","name":null,"original":{"line":29,"column":42},"generated":{"line":1,"column":358}},{"source":"../../src/configurations.ts","name":null,"original":{"line":29,"column":46},"generated":{"line":1,"column":362}},{"source":"../../src/configurations.ts","name":null,"original":{"line":29,"column":46},"generated":{"line":1,"column":364}},{"source":"../../src/configurations.ts","name":null,"original":{"line":29,"column":68},"generated":{"line":1,"column":386}},{"source":"../../src/configurations.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":1,"column":392}},{"source":"../../src/configurations.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":396}},{"source":"../../src/configurations.ts","name":null,"original":{"line":33,"column":29},"generated":{"line":1,"column":398}},{"source":"../../src/configurations.ts","name":null,"original":{"line":33,"column":30},"generated":{"line":1,"column":407}},{"source":"../../src/configurations.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":1,"column":410}},{"source":"../../src/configurations.ts","name":null,"original":{"line":34,"column":6},"generated":{"line":1,"column":413}},{"source":"../../src/configurations.ts","name":null,"original":{"line":34,"column":19},"generated":{"line":1,"column":415}},{"source":"../../src/configurations.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":416}},{"source":"../../src/configurations.ts","name":null,"original":{"line":35,"column":10},"generated":{"line":1,"column":420}},{"source":"../../src/configurations.ts","name":null,"original":{"line":35,"column":24},"generated":{"line":1,"column":422}},{"source":"../../src/configurations.ts","name":null,"original":{"line":35,"column":32},"generated":{"line":1,"column":430}},{"source":"../../src/configurations.ts","name":null,"original":{"line":35,"column":40},"generated":{"line":1,"column":438}},{"source":"../../src/configurations.ts","name":null,"original":{"line":35,"column":52},"generated":{"line":1,"column":440}},{"source":"../../src/configurations.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":1,"column":452}},{"source":"../../src/configurations.ts","name":null,"original":{"line":36,"column":11},"generated":{"line":1,"column":459}},{"source":"../../src/configurations.ts","name":null,"original":{"line":36,"column":17},"generated":{"line":1,"column":470}},{"source":"../../src/configurations.ts","name":null,"original":{"line":36,"column":17},"generated":{"line":1,"column":477}}],"sources":{"../../src/configurations.ts":"import { Provider, RetryStrategy } from \"@aws-sdk/types\";\n\nimport { StandardRetryStrategy } from \"./defaultStrategy\";\n\nexport interface RetryInputConfig {\n  /**\n   * The maximum number of times requests that encounter retryable failures should be attempted.\n   */\n  maxAttempts?: number;\n  /**\n   * The strategy to retry the request. Using built-in exponential backoff strategy by default.\n   */\n  retryStrategy?: RetryStrategy;\n}\n\ninterface PreviouslyResolved {\n  maxAttemptsDefaultProvider: (input: any) => Provider<string>;\n}\nexport interface RetryResolvedConfig {\n  maxAttempts: Provider<string>;\n  retryStrategy: RetryStrategy;\n}\n\nexport const resolveRetryConfig = <T>(input: T & PreviouslyResolved & RetryInputConfig): T & RetryResolvedConfig => {\n  const maxAttempts = normalizeMaxAttempts(input.maxAttempts) ?? input.maxAttemptsDefaultProvider(input as any);\n  return {\n    ...input,\n    maxAttempts,\n    retryStrategy: input.retryStrategy || new StandardRetryStrategy(maxAttempts),\n  };\n};\n\nconst normalizeMaxAttempts = (maxAttempts?: number): Provider<string> | undefined => {\n  if (maxAttempts) {\n    const promisified = Promise.resolve(maxAttempts.toString());\n    return () => promisified;\n  }\n};\n"},"lineCount":null}},"error":null,"hash":"e1d2ab67b8685938eb149fc4500758e7","cacheData":{"env":{}}}