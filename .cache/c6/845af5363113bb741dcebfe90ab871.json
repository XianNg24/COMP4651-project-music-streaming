{"id":"Gosq","dependencies":[{"name":"/Users/spittela/code/giphlify/package.json","includedInParent":true,"mtime":1599671784193},{"name":"/Users/spittela/code/giphlify/.babelrc","includedInParent":true,"mtime":1599669969128},{"name":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/smithy-client/package.json","includedInParent":true,"mtime":1599668814074},{"name":"@aws-sdk/middleware-stack","loc":{"line":4,"column":33},"parent":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/smithy-client/dist/cjs/command.js","resolved":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/middleware-stack/dist/cjs/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Command=void 0;var e=require(\"@aws-sdk/middleware-stack\"),r=function(){return function(){this.middlewareStack=new e.MiddlewareStack}}();exports.Command=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/command.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"../../src/command.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"../../src/command.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"../../src/command.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":105}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":134}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":136}},{"source":"../../src/command.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":147}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":154}},{"source":"../../src/command.ts","name":null,"original":{"line":12,"column":11},"generated":{"line":1,"column":165}},{"source":"../../src/command.ts","name":null,"original":{"line":12,"column":11},"generated":{"line":1,"column":170}},{"source":"../../src/command.ts","name":null,"original":{"line":12,"column":62},"generated":{"line":1,"column":186}},{"source":"../../src/command.ts","name":null,"original":{"line":12,"column":66},"generated":{"line":1,"column":190}},{"source":"../../src/command.ts","name":null,"original":{"line":12,"column":66},"generated":{"line":1,"column":192}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":209}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":22},"generated":{"line":1,"column":212}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":22},"generated":{"line":1,"column":220}},{"source":"../../src/command.ts","name":null,"original":{"line":4,"column":22},"generated":{"line":1,"column":228}}],"sources":{"../../src/command.ts":"import { MiddlewareStack } from \"@aws-sdk/middleware-stack\";\nimport { Command as ICommand, Handler, MetadataBearer, MiddlewareStack as IMiddlewareStack } from \"@aws-sdk/types\";\n\nexport abstract class Command<\n  Input extends ClientInput,\n  Output extends ClientOutput,\n  ResolvedClientConfiguration,\n  ClientInput extends object = any,\n  ClientOutput extends MetadataBearer = any\n> implements ICommand<ClientInput, Input, ClientOutput, Output, ResolvedClientConfiguration> {\n  abstract input: Input;\n  readonly middlewareStack: IMiddlewareStack<Input, Output> = new MiddlewareStack<Input, Output>();\n  abstract resolveMiddleware(\n    stack: MiddlewareStack<ClientInput, ClientOutput>,\n    configuration: ResolvedClientConfiguration,\n    options: any\n  ): Handler<Input, Output>;\n}\n"},"lineCount":null}},"error":null,"hash":"6abd93acd632ae81a00e2c3b16ff26de","cacheData":{"env":{}}}