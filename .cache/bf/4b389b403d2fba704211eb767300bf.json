{"id":"SI2D","dependencies":[{"name":"/Users/spittela/code/giphlify/package.json","includedInParent":true,"mtime":1599683869183},{"name":"/Users/spittela/code/giphlify/.babelrc","includedInParent":true,"mtime":1599669969128},{"name":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/middleware-user-agent/package.json","includedInParent":true,"mtime":1599668814075}],"generated":{"js":"\"use strict\";function e(e){return e}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.resolveUserAgentConfig=void 0,exports.resolveUserAgentConfig=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/configurations.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":13}},{"source":"../../src/configurations.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":1,"column":22}},{"source":"../../src/configurations.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":1,"column":24}},{"source":"../../src/configurations.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":1,"column":27}},{"source":"../../src/configurations.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":1,"column":34}},{"source":"../../src/configurations.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":129}},{"source":"../../src/configurations.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":137}},{"source":"../../src/configurations.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":160}}],"sources":{"../../src/configurations.ts":"export interface UserAgentInputConfig {\n  /**\n   * The custom user agent header that would be appended to default one\n   */\n  customUserAgent?: string;\n}\ninterface PreviouslyResolved {\n  defaultUserAgent: string;\n  runtime: string;\n}\nexport interface UserAgentResolvedConfig {\n  defaultUserAgent: string;\n  customUserAgent?: string;\n  runtime: string;\n}\nexport function resolveUserAgentConfig<T>(\n  input: T & PreviouslyResolved & UserAgentInputConfig\n): T & UserAgentResolvedConfig {\n  return input;\n}\n"},"lineCount":null}},"error":null,"hash":"35e7680f02c73f5008a5c004965d90b7","cacheData":{"env":{}}}